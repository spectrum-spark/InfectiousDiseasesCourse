{
  "hash": "7956ad1f3c405f25b1b50cfbd175979e",
  "result": {
    "markdown": "---\ntitle: \"Vector-Borne Disease Models in R\"\nauthor: |\n    | *Developed and presented by <a href=\"https://www.doherty.edu.au/people/patricia-trish-campbell\" \n      target=\"_blank\">Trish Campbell</a> The University of Melbourne at The Peter Doherty Institute \n      for Infection and Immunity*\n    |  \n    | *SPARK short course 'Mathematical Modelling of Infectious Diseases', Thailand, July 2022*\noutput: \n  html_document:\n     self_contained: yes\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n<style type=\"text/css\">\ntextarea {\n    width: 100%;\n}\n</style>\n:::\n\n\n# Summary {.tabset .tabset-pills .tabset-fade}\n\nIn this practical, we will code the vector-borne disease model developed in the previous session, adapt it to include more\nrealism, explore how the behaviour of the system changes as some of our assumptions change and discuss how interventions \nmight be included in the model.\n\n**Part 1** covers:\n\n* Coding a model for dengue transmission\n* Running the model and plotting the results\n* Comparing the modelled output to published case numbers\n\n**Part 2** covers:\n\n* Adapting the model to include exposed compartments\n* Comparing the modelled output to published case numbers\n\n**Part 3** covers: \n\n* Adapting the model to include seasonality\n* Comparing the modelled output to published case numbers\n\n**Part 4** covers:\n\n* Identifying different interventions that could be used for dengue control\n* Identifying of the various model elements on which an intervention acts\n* Discuss in groups how the model would need to be adapted\n\n### Setting up your system \n\nBefore we begin developing a model, we need to set up our system. \n\nAs in previous sessions, we will start by creating a new file and writing a short description of your code to summarise its purpose for future users. Below is an example of such a description for this session. Open R studio, and then open the file `session8.R` in the `\\student_materials` folder. Copy and paste the code chunk below (or write your own!) into your editor to start writing your own code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n```\n:::\n\n\n### Save your new file\n\nWe recommend saving your file in the `\\student_materials` folder as you work through the practical session.\n\n### Set working directory\n\nRemember to set your working directory. As in previous sessions, you can set the working directory by tabbing: \nSession/Set Working Directory/To Source Location\n\nThe better way is to re-use the RStudio Project you've been using so far (if you have one of them), and your \nworking directory will be set automatically.\n\n### Load required packages\n\nCopy and paste the code below into your file to load the dplyr, deSolve and ggplot2 packages:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/dplyr_1.1.0.zip' ...\n\tOK [downloaded 1.6 Mb in 0.8 secs]\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/generics_0.1.3.zip' ...\n\tOK [downloaded 78.5 Kb in 0.6 secs]\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/tidyselect_1.2.0.zip' ...\n\tOK [downloaded 220 Kb in 0.7 secs]\nInstalling generics [0.1.3] ...\n\tOK [installed binary]\nMoving generics [0.1.3] into the cache ...\n\tOK [moved to cache in 15 milliseconds]\nInstalling tidyselect [1.2.0] ...\n\tOK [installed binary]\nMoving tidyselect [1.2.0] into the cache ...\n\tOK [moved to cache in 19 milliseconds]\nInstalling dplyr [1.1.0] ...\n\tOK [installed binary]\nMoving dplyr [1.1.0] into the cache ...\n\tOK [moved to cache in 16 milliseconds]\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/ggplot2_3.4.1.zip' ...\n\tOK [downloaded 4 Mb in 2.2 secs]\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/gtable_0.3.1.zip' ...\n\tOK [downloaded 160.6 Kb in 0.4 secs]\nRetrieving 'https://cloud.r-project.org/bin/windows/contrib/4.1/isoband_0.2.7.zip' ...\n\tOK [downloaded 2.2 Mb in 0.6 secs]\nInstalling gtable [0.3.1] ...\n\tOK [installed binary]\nMoving gtable [0.3.1] into the cache ...\n\tOK [moved to cache in 14 milliseconds]\nInstalling isoband [0.2.7] ...\n\tOK [installed binary]\nMoving isoband [0.2.7] into the cache ...\n\tOK [moved to cache in 15 milliseconds]\nInstalling ggplot2 [3.4.1] ...\n\tOK [installed binary]\nMoving ggplot2 [3.4.1] into the cache ...\n\tOK [moved to cache in 13 milliseconds]\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n```\n:::\n\n<p><br></p>\n\n## **Part 1:** A model for dengue\n\nIn the previous session, we developed a model for a mosquito-borne disease. Here, we will code that model in R and parameterise it using typical values applicable to dengue transmission.\n\n### Define the model parameters and time period for simulations\n\nAs we saw in previous sessions, model parameters must be estimated either from literature or from a model. In developing this model for dengue, we will use parameter values obtained from the following paper:\n<p><br></p>\nNdii, M.Z., Hickson, R.I., Allingham, D. and Mercer, G.N., 2015. Modelling the transmission dynamics of dengue in the presence of *Wolbachia*. *Mathematical Biosciences*, 262, pp.157&ndash;166.\n\n<p><br></p>\n\n<table>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Parameter</th>\n<th align=\"center\">Symbol/name</th>\n<th align=\"center\">Value and/or Range</th>\n<th align=\"right\">Units</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Number of bites</td>\n<td align=\"center\">bites</td>\n<td align=\"center\">0.63</td>\n<td align=\"right\">per mosquito per day\n</tr>\n<tr class=\"even\">\n<td>Probability of transmission --- mosquito to human</td>\n<td align=\"center\">T_HM</td>\n<td align=\"center\">0.26</td>\n<td align=\"right\">N/A</td>\n</tr>\n<tr class=\"odd\">\n<td>Probability of transmission --- human to mosquito</td>\n<td align=\"center\">T_MH</td>\n<td align=\"center\">0.26</td>\n<td align=\"right\">N/A</td>\n</tr>\n<tr class=\"even\">\n<td>Duration of infection --- humans</td>\n<td align=\"center\">infectious_period</td>\n<td align=\"center\">5</td>\n<td align=\"right\">days</td>\n</tr>\n<tr class=\"odd\">\n<td>Mosquito birth and death rate</td>\n<td align=\"center\">mu_M</td>\n<td align=\"center\">$\\frac{1}{14}$</td>\n<td align=\"right\">per day</td>\n</tr>\n</tbody>\n</table>\n\nUsing the table of parameter names and values above, copy and paste the following code chunk into your editor and complete\nthe code by entering the <span style=\"color: blue\">VALUE, NAME</span> and <span style=\"color: blue\">DESCRIPTION</span> where they are missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model parameters\nparameters <- c(\n bites = VALUE, # number of bites per mosquito per day\n NAME = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # DESCRIPTION\n infectious_period = 5, # days\n mu_M = VALUE # DESCRIPTION\n)\n```\n:::\n\n\nWe also need to specify the start time and end time for our simulation, as well as the time step to report values. We will use the times specified in the Ndii et al. paper. Copy and paste the code chunk below into your editor, and complete by specifying the arguments to the `seq`function, indicated as <span style=\"color: blue\">VALUE, VALUE, VALUE</span> using a time step of 1 day:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(VALUE, VALUE, VALUE)\n```\n:::\n\n\n\n### Set up the initial conditions\n\nThe Ndii et al. paper develops a model for dengue transmission in the city of Cairns, Australia, which had an approximate \nhuman population of 150,000 in 2008. The carrying capacity for the mosquito population (the maximum population that can be supported without environmental degradation) is related to the number of available breeding sites, which in turn is dependent on the number of humans. The Ndii et al paper sets the carrying capacity at three times the human population, and so we will assume an initial mosquito population size of 450,000, half of which is female. We only model female mosquitoes as they are the only ones that transmit infection. Our simulations will commence with 2 infectious humans and 10 infectious mosquitoes, with all remaining humans and mosquitoes susceptible.\n\nUsing this information, copy and paste the following code chunk into your editor and complete\nthe code by entering <span style=\"color: blue\">VALUE</span> where it is missing, and calculating the population in the human recovered compartment and mosquito infectious compartment using the values of other variables (where <span style=\"color: blue\">EXPRESSION USING OTHER VARIABLES</span> is indicated):\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- VALUE # population of Cairns in 2008\ninitial_human_susceptible <- VALUE\ninitial_human_infectious <- 2\ninitial_human_recovered <- EXPRESSION USING OTHER VARIABLES\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- VALUE\ninitial_mosquito_infectious <- EXPRESSION USING OTHER VARIABLES\n```\n:::\n\n\n### Define the model variables (also known as compartments or states)\n\nWe define the compartments of our model, initialise the value of each using the initial conditions and then gather them together in a single variable. Copy and paste the code chunk below into your editor and complete the code by entering <span style=\"color: blue\">VALUE</span> where it is missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = VALUE,\n           Infectious_human = VALUE,\n           Recovered_human = VALUE,\n           Susceptible_mosquito = VALUE,\n           Infectious_mosquito = VALUE)\n```\n:::\n\n\n### Set up a function to solve the equations\n\nNow that we have defined our parameters, compartments and initial conditions, we will write a function to numerically solve our dengue model using the model equations developed in the previous session. Copy and paste the incomplete code chunk below into your editor and complete the code by replacing the text indicated by <span style=\"color: blue\">EXPRESSION USING OTHER VARIABLES</span>:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- EXPRESSION USING OTHER VARIABLES\n    Total_mosquito_population <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- EXPRESSION USING OTHER VARIABLES \n    Infectious_human_change <- EXPRESSION USING OTHER VARIABLES\n    Recovered_human_change <- EXPRESSION USING OTHER VARIABLES\n    Susceptible_mosquito_change <- EXPRESSION USING OTHER VARIABLES \n    Infectious_mosquito_change <- EXPRESSION USING OTHER VARIABLES\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\n### Run the model and plot the results\n\nWe now run the model, using the code you learned in a previous session. Copy and paste the code chunk below into your editor, enter <span style=\"color: blue\">VALUE</span> where it is missing, and then run your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_base <- ode(y = VALUE, times = as.numeric(times - times[1]), func = VALUE, parms = VALUE)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/run_model-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n### Comparing to published dengue incidence data\n\nThe weekly incidence of dengue infections in Cairns over the period we ran our model is reported in Ritchie, S.A., Pyke, A.T., Hall-Mendelin, S.et al., 2013. An explosive epidemic of DENV-3 in Cairns, Australia. *PLoS One*, 8(7), p.e68137.\n\n<div class=\"row\">\n &emsp;\n      <center><img src=\"local_images/8.images/pone.0068137.g002.png\" alt=\"Dengue confirmed cases in Cairns Nov 2008 to May 2009\" style=\"width:80%\"></center>\n</div>\n\n<p><br></p>\nThe data in this published plot represent the weekly number of newly confirmed cases, while the model output we have saved reports the daily number of infectious people. To compare our data to the published data, we need to convert our data into new infections, that is, convert *prevalence* data into *incidence* data. It is possible to save and report new infections directly within your model function, but here we will calculate the number of new infections using the data we have already generated. From our model equations, we have:\n\n<ul>\n<li>Susceptible human change =  - new infections </li>\n</ul>\n\nIf we can calculate susceptible human change from our model output, we will have the number of new infections. Since our model output records the number of humans in the S compartment at each of our recorded time steps, if we take the difference between these entries, we will have the susceptible human change, and we get the new infections by changing its sign. Copy and paste the code below into your editor, to convert daily prevalence into weekly incidence and plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\n dengue_base_infections <- dengue_base_infections  %>%\n                          mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n                                 Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/new_infections-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nComparing this plot to the published data, we can see that while we have captured the *shape* of the outbreak reasonably well, our model generates orders of magnitude higher new infections than were reported. There are numerous potential explanations for this. In the next section, we will adapt our model to see whether we can improve the fit.\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">\n\n## **Part 1:** Solutions\n\nBy the end of Part 1, your script should look like this:\n\n\n::: {.cell layout-align=\"center\" ECHO='true'}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission — human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n```\n:::\n\n\n## **Part 2:** Adapting the model\n\nIn this part, we will adapt the model we developed in Part 1 to try to better capture the Cairns dengue outbreak dynamics. It is important to note that our model in Part 1 mostly used parameter values from Ndii et al. Two of those parameters, the probability of transmission from mosquito to human $\\text{(T_HM)}$ and the probability of transmission from human to mosquito $\\text{(T_MH)}$ were **fitted** using the Ndii et al. model, which has a different structure to the model we developed in Part 1.This highlights the very important point that:\n<p><br></p>\n<center><span style=\"font-size:14pt; color: red\">*Parameter values may not be directly transferable between models*</span></center>\n<p><br></p>\n\n### What might be missing from our dengue model?\n\nWhen we wrote our vector-borne disease model, we made a simplifying assumption that both humans and mosquitoes are infectious immediately upon being infected. We noted that in reality, it takes time for the infectious load to build in a host before they are capable of transmitting infection. As you have seen in previous sessions, we refer to this as the exposed period --- an individual is infected, but not yet infectious. Ndii et al. account for this in their model.\n\n**2.1 Ndii et al. use 10 days as the duration of the exposed period in mosquitoes. With mosquitoes living on average for 14 days, what do you think are the implications of this exposed period for transmission?**\n<textarea cols=\"127\" rows=\"4\"></textarea>\n<p><br></p>\n\n**2.2 Ndii et al. use 5.5 days as the duration of the exposed period in humans. Which exposed period (mosquito or human) do you think would have a greater impact on dengue disease dynamics? Why?**\n<textarea cols=\"127\" rows=\"4\"></textarea>\n\n### Adding another compartment to our model diagram\n\nBefore we begin coding a new version of our model, it's a good idea to draw the structure of the new model. Redraw the model that you produced in the previous session to include exposed compartments for both the human and the mosquito populations.\n\n<p></p> \n<p><strong>Instructions:</strong></p>\n<ol style=\"list-style-type: decimal\">\n<li><p>You can draw a diagram electronically in a program such as PowerPoint, or you can draw your diagram by hand and take a photo</p></li>\n<li><p>Make sure you label all compartments as well as the inflows and outflows from each compartment.</p></li>\n<li><p>Save your diagram in one of the following formats: .jpg, .gif, .png</p></li>\n<li><p>Upload your diagram using the <strong><em>Browse...</em></strong> button below</p></li>\n<li><p>If you prefer, you can describe your model in words in the space below</p></li>\n</ol>\n<p><strong>NB: You can replace a file by clicking on the file name and selecting a file with a different name.</strong></p>\n<div class=\"field\" align=\"left\">\n<span>\n<h3>\nUpload your image\n</h3>\n<p><input type=\"file\" id=\"files\" name=\"files[]\" multiple></input> </span></p>\n</div>\n<style>\n    input[type=\"file\"] {\n\n     display:block;\n    }\n    .imageThumb {\n     max-height: 600px;\n     border: 2px solid;\n     margin: 10px 10px 0 0;\n     padding: 1px;\n     }\n</style>\n<script type=\"text/javascript\">\n    $(document).ready(function() {\n\n     if(window.File && window.FileList && window.FileReader) {\n        $(\"#files\").on(\"change\",function(e) {\n            var files = e.target.files ,\n            filesLength = files.length ;\n            for (var i = 0; i < filesLength ; i++) {\n                var f = files[i]\n                var fileReader = new FileReader();\n                fileReader.onload = (function(e) {\n                    var file = e.target;\n                    $(\"<span class=\\\"pip\\\">\" +\n            \"<img class=\\\"imageThumb\\\" src=\\\"\" + e.target.result + \"\\\" title=\\\"\" + file.name + \"\\\"/>\" +\n            \"<br/><span class=\\\"remove\\\"><u>Remove image</u></span>\" +\n            \"</span>\").insertAfter(\"#files\");\n          $(\".remove\").click(function(){\n            $(this).parent(\".pip\").remove();\n          });\n                });\n               fileReader.readAsDataURL(f);\n           }\n      });\n     } else { alert(\"Your browser doesn't support to File API\") }\n    });\n\n</script>\n\n### Adding another compartment to our model code\n\n**2.3 To add a new compartment to our model, several aspects need to be changed. What is the additional information that needs to be provided?**\n<textarea cols=\"127\" rows=\"4\"></textarea>\n\nBefore beginning, you should add a heading in your file indicating that you have started a new model, as the code we write here will overwrite the parameters and variables you used in Part 1, other than your final results. For example, you could copy and paste the code chunk below into your editor to start writing your code for the new model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n```\n:::\n\n\nFirst we need to add new parameters. Copy and paste the code chunk below into your editor, enter <span style=\"color: blue\">VALUE</span> where it is missing, and then run your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model parameters\nparameters <- c(\n bites = 0.63, # number of bites per mosquito per day\n T_HM = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # probability of transmission - human to mosquito\n infectious_period = 5, # days. Duration in infectious compartment\n mu_M = 1/14, # per day. Mosquito birth and death rate.\n exposed_period_H = VALUE, # days. Duration in exposed compartment - human\n exposed_period_M = VALUE # days. Duration in exposed compartment - mosquito\n)\n```\n:::\n\n\nNext we need to add some new initial conditions. Let's start with no exposed humans and no exposed mosquitoes. Copy and paste the code chunk below into your editor, completing <span style=\"color: blue\">EXPRESSION USING OTHER VARIABLES</span> where it is missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- EXPRESSION USING OTHER VARIABLES\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- EXPRESSION USING OTHER VARIABLES\n```\n:::\n\n\nAs before, we now initialise our model states, using the initial conditions we set above. Copy and paste the code chunk below into your editor, completing <span style=\"color: blue\">EXPRESSION USING OTHER VARIABLES</span> where it is missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = EXPRESSION USING OTHER VARIABLES,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = EXPRESSION USING OTHER VARIABLES,\n           Infectious_mosquito = initial_mosquito_infectious)\n```\n:::\n\n\nWe set up times to run the model, here extending the end date (for reasons that will become clear). Copy and paste the code chunk below into your editor, to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n```\n:::\n\n\nNext, we adapt our model function to include the changes we have made to the model structure.Copy and paste the code chunk below into your editor to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\n**2.4 Identify the elements of the model function above that have changed compared to your model in Part 1**\n<textarea cols=\"127\" rows=\"6\"></textarea>\n\nWe are now ready to run the model and plot the results. Note that we use a different name for the output to preserve the results from your model in Part 1. Copy and paste the code chunk below into your editor, enter <span style=\"color: blue\">VALUE</span> where it is missing, and then run the new model parts of your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_with_E <- ode(y = VALUE, times = as.numeric(times - times[1]), func = VALUE, parms = VALUE)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/run_model_with_E-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAs we did in Part 1, we want to convert our dengue prevalence data to incidence data. In our new model, we have:\n\n<ul>\n<li>Susceptible human change = - new infections</li>\n<li>Exposed human change = new infections - transitions to infectious</li>\n<li>Infectious human change = transitions to infectious - recoveries</li>\n<li>Recovered human change = recoveries</li>\n</ul>\n\nAs before, we could calculate the difference in our susceptible population from our model output to be left with 'new infections' at each time step. However, the new infections in this model may not yet have come to the attention of the health system. We make the simplifying assumption that symptoms occur at the same time that a person becomes infectious, and so we count the transitions into the infectious state as our new 'cases' and obtain these by adding the infectious human change and recovered human change. Copy and paste the code below into your editor, to convert daily prevalence into weekly incidence and plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n                          mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n                                 Recovered_human_change = c(0, diff(Recovered_human)),\n                                 New_human_infections = Infectious_human_change + Recovered_human_change,\n                                 Cumulative_human_infections = cumsum(New_human_infections)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n     \n# Plot solution\nplot(dengue_with_E_infections$time, dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/new_infections_with_E-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n**2.5 How do the modelled results compare to those for the model in Part 1? (Hint: Look at the magnitude and the timing of the peak.)**\n<textarea cols=\"127\" rows=\"6\"></textarea>\n<p><br></p>\n\n**2.6 Why do you think the modelled behaviour has changed?**\n<textarea cols=\"127\" rows=\"6\"></textarea>\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\"> \n\n## **Part 2:** Solutions\n\nBy the end of Part 2, your script should look like this:\n\n\n::: {.cell layout-align=\"center\" ECHO='true'}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission — human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10 # days. Duration in exposed compartment - mosquito\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_infections$time, dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n```\n:::\n\n\n\n## **Part 3:** The impact of seasonality\n\n### Adding seasonality to the model\n\nAdding an exposed compartment reduced the number of new infections, but substantially delayed the timing of the outbreak. There is still a large assumption that we have made --- that the mosquito population is constant. In tropical areas, mosquito numbers fluctuate substantially over the year, with larger numbers typically seen in the wet season, which in Cairns develops in December and lasts until March. Ndii et al. incorporated such seasonality in the mosquito death rate in their model. We apply a seasonal death rate for mosquitoes using the parameters and formula applied by Ndii et al:\n\n$$death\\text{ }rate(t) = average\\text{ }death\\text{ }rate\\left(1 - amplitude * \\text{cos}\\left(\\frac{2\\pi*\\left(t + phase\\right)}{365}\\right)\\right)$$\n\nAs before, you should add a heading in your file indicating that you have started a new model. For example, you could copy and paste the code chunk below into your editor to start writing your code for the new model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 3##\n#############################################################\n\n# A model for dengue transmission - Part 3\n# Some R code to numerically solve a set of ordinary differential equations\n# for a model of dengue with an exposed period and seasonality. \n# Results are then plotted.\n```\n:::\n\n\nFirst we need to define the new seasonality parameters. Copy and paste the code chunk below into your editor to continue writing your code: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add seasonality parameters\nparameters <- c(\n bites = 0.63, # number of bites per mosquito per day\n T_HM = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # probability of transmission - human to mosquito\n infectious_period = 5, # days. Duration in infectious compartment\n mu_M = 1/14, # per day. Mosquito birth and death rate.\n exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n exposed_period_M = 10, # days. Duration in exposed compartment - mosquito\n death_amplitude = 0.6228, # from Ndii et al.\n death_phase = 20.61 # days, from Ndii et al.\n)\n```\n:::\n\n\n\n**3.1 What effect do you expect a seasonal death rate to have on the size of the mosquito population?**\n<textarea cols=\"127\" rows=\"6\"></textarea>\n\nAs well as the parameters, we also need to change our initial population numbers to reflect that when our model starts in November, the mosquito population is not at its maximum value. Copy and paste the code chunk below into your editor to define the new initial conditions and initialise the compartments:  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 110000 # around half the maximum\ninitial_mosquito_susceptible <- 109990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n```\n:::\n\n\nWe set up times to run the model, returning to our original dates. Copy and paste the code chunk below into your editor, to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n```\n:::\n\n\nNext, we adapt our model function to add seasonality to the mosquito death rate.Copy and paste the code chunk below into your editor to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function with seasonality\ndengue_with_E_seasonal <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the current seasonal death rate\n    mu_M_seasonal <- mu_M * (1 - death_amplitude * cos(2 * pi * (t + death_phase) / 365))\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - force_of_infection_on_mosquito * Susceptible_mosquito - mu_M_seasonal * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito / exposed_period_M - mu_M_seasonal * Exposed_mosquito \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M_seasonal * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\nWe are now ready to run the model and plot the results. Again we use a different name for the output to preserve the results from your model in Parts 1 and 2. Copy and paste the code chunk below into your editor and then run the new model parts of your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_with_E_seasonal <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E_seasonal, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E_seasonal, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/run_model_with_E_seasonal-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nCopy and paste the code below into your editor, to convert daily prevalence into weekly incidence and plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_with_E_seasonal_infections <- as.data.frame(out_dengue_with_E_seasonal[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_seasonal_infections <- dengue_with_E_seasonal_infections  %>%\n                          mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n                                 Recovered_human_change = c(0, diff(Recovered_human)),\n                                 New_human_infections = Infectious_human_change + Recovered_human_change,\n                                 Cumulative_human_infections = cumsum(New_human_infections)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n     \n# Plot solution\nplot(dengue_with_E_seasonal_infections$time, dengue_with_E_seasonal_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E and seasonality\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_models_in_r_files/figure-html/new_infections_with_E_seasonal_infectious-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n**3.2 How do the results compare to the case data in Part 1? What might be the explanation for any differences?**\n<textarea cols=\"127\" rows=\"6\"></textarea>\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\"> \n\n## **Part 3:** Solutions\n\nBy the end of Part 3, your script should look like this:\n\n\n::: {.cell layout-align=\"center\" ECHO='true'}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission — human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10 # days. Duration in exposed compartment - mosquito\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_infections$time, dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 3##\n#############################################################\n\n# A model for dengue transmission - Part 3\n# Some R code to numerically solve a set of ordinary differential equations\n# for a model of dengue with an exposed period and seasonality. \n# Results are then plotted.\n\n# Add seasonality parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10, # days. Duration in exposed compartment - mosquito\n  death_amplitude = 0.6228, # from Ndii et al.\n  death_phase = 20.61 # days, from Ndii et al.\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 110000 # around half the maximum\ninitial_mosquito_susceptible <- 109990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function with seasonality\ndengue_with_E_seasonal <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the current seasonal death rate\n    mu_M_seasonal <- mu_M * (1 - death_amplitude * cos(2 * pi * (t + death_phase) / 365))\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - force_of_infection_on_mosquito * Susceptible_mosquito - mu_M_seasonal * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito / exposed_period_M - mu_M_seasonal * Exposed_mosquito \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M_seasonal * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E_seasonal <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E_seasonal, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E_seasonal, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_seasonal_infections <- as.data.frame(out_dengue_with_E_seasonal[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_seasonal_infections <- dengue_with_E_seasonal_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_seasonal_infections$time, dengue_with_E_seasonal_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E and seasonality\")\n```\n:::\n\n\n\n## **Part 4:** Interventions\n\n### Interventions to control dengue\n\nInterventions against vector-borne diseases can take a number of different forms, because they can target the host (humans in the dengue model we have considered here) or the vector (mosquitoes in our dengue model). Interventions can also act at different stages of the vector life-cycle, for example, spraying to kill mosquito eggs before they hatch. \n\nIn groups of 4&ndash;6, identify interventions that could be implemented to control dengue transmission and for each of them, consider what action that intervention would have (for example, does it reduce human susceptibility to infection?). Then discuss how the model we have developed would need to be adapted to include the intervention.\n\n**4.1 Intervention 1: note the type of intervention, how it acts and how our model could be adapted to include it.**\n<textarea cols=\"127\" rows=\"8\"></textarea>\n<p><br></p>\n\n**4.2 Intervention 2: note the type of intervention, how it acts and how our model could be adapted to include it.**\n<textarea cols=\"127\" rows=\"8\"></textarea>\n<p><br></p>\n\n**4.3 Intervention 3: note the type of intervention, how it acts and how our model could be adapted to include it.**\n<textarea cols=\"127\" rows=\"8\"></textarea>\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\"> \n\n\n",
    "supporting": [
      "session8_vector_borne_models_in_r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}