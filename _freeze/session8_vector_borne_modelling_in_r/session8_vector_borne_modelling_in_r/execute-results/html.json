{
  "hash": "928b809e5395e16a681d89fc1edceed6",
  "result": {
    "markdown": "---\ntitle: \"Vector-borne disease models in R\"\nauthor: |\n  | ***SPARK short course 'Mathematical Modelling of Infectious Diseases', Indonesia, March 2023***\n  |\n  | ***Developed and presented by <a href=\"https://www.doherty.edu.au/people/patricia-trish-campbell\" \n      >Trish Campbell</a>, The University of Melbourne at The Peter Doherty Institute for Infection and Immunity***\noutput: \n  html_document:\n     self_contained: yes\n     link-external-icon: true\n     link-external-newwindow: true\nexecute:\n  echo: false\n  warning: false\neditor: \n  markdown: \n    wrap: 72\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n<style type=\"text/css\">\ntextarea {\n    width: 100%;\n}\n\n.line-block {\n    line-height: 1.5em;\n}\n\n.line-block a {\n    font-style: italic;\n}\n</style>\n:::\n\n\n# Summary {.tabset .tabset-pills .tabset-fade}\n\nIn this practical, we will code the vector-borne disease model developed\nin the previous session, adapt it to include more realism, explore how\nthe behaviour of the system changes as some of our assumptions change\nand discuss how interventions might be included in the model.\n\n**Part 1** covers:\n\n-   Coding a model for dengue transmission\n-   Running the model and plotting the results\n-   Comparing the modelled output to published case numbers\n\n**Part 2** covers:\n\n-   Adapting the model to include exposed compartments\n-   Comparing the modelled output to published case numbers\n\n**Part 3** covers:\n\n-   Adapting the model to include seasonality\n-   Comparing the modelled output to published case numbers\n\n**Part 4** covers:\n\n-   Identifying different interventions that could be used for dengue\n    control\n-   Identifying of the various model elements on which an intervention\n    acts\n-   Discuss in groups how the model would need to be adapted\n\n### Setting up your system\n\nBefore we begin developing a model, we need to set up our system.\n\nAs in previous sessions, we will start by creating a new file and\nwriting a short description of your code to summarise its purpose for\nfuture users. Below is an example of such a description for this\nsession. Open R studio, and then open the file `session8_vector_model.R` in the\n`\\student_files` folder. Copy and paste the code chunk below (or\nwrite your own!) into your editor to start writing your own code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n```\n:::\n\n\n### Save your new file\n\nWe recommend saving your file in the `\\student_materials` folder as you\nwork through the practical session.\n\n### Set working directory\n\nRemember to set your working directory. As in previous sessions, you can\nset the working directory by tabbing: Session/Set Working Directory/To\nSource Location\n\nThe better way is to re-use the RStudio Project you've been using so far\n(if you have one of them), and your working directory will be set\nautomatically.\n\n### Load required packages\n\nCopy and paste the code below into your file to load the dplyr, deSolve\nand ggplot2 packages:\n\n\n::: {.cell layout-align=\"center\" warnings='false'}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n```\n:::\n\n\n\n## **Part 1:** A model for dengue\n\n### Problem description\n\nIn the previous session, we developed a model for a mosquito-borne\ndisease. Here, we will code that model in R and parameterise it using\ntypical values applicable to dengue transmission.\n\n### Define the model parameters and time period for simulations\n\nAs we saw in previous sessions, model parameters must be estimated\neither from literature or from a model. In developing this model for\ndengue, we will use parameter values obtained from the following paper:\n\nNdii, M.Z., Hickson, R.I., Allingham, D. and Mercer, G.N., 2015.\nModelling the transmission dynamics of dengue in the presence of\n*Wolbachia*. *Mathematical Biosciences*, 262, pp.157--166.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Parameter </th>\n   <th style=\"text-align:left;\"> Name </th>\n   <th style=\"text-align:left;\"> Value </th>\n   <th style=\"text-align:left;\"> Units </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Number of bites </td>\n   <td style=\"text-align:left;\"> bites </td>\n   <td style=\"text-align:left;\"> 0.63 </td>\n   <td style=\"text-align:left;\"> per mosquito per day </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Probability of transmission - mosquito to human </td>\n   <td style=\"text-align:left;\"> T_HM </td>\n   <td style=\"text-align:left;\"> 0.26 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Probability of transmission - human to mosquito </td>\n   <td style=\"text-align:left;\"> T_MH </td>\n   <td style=\"text-align:left;\"> 0.26 </td>\n   <td style=\"text-align:left;\"> NA </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Duration of infection - humans </td>\n   <td style=\"text-align:left;\"> infectious period </td>\n   <td style=\"text-align:left;\"> 5 </td>\n   <td style=\"text-align:left;\"> days </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mosquito birth and death rate </td>\n   <td style=\"text-align:left;\"> mu_M </td>\n   <td style=\"text-align:left;\"> 1/14 </td>\n   <td style=\"text-align:left;\"> per day </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nUsing the table of parameter names and values above, copy and paste the\nfollowing code chunk into your editor and complete the code by entering\nthe [VALUE, NAME]{style=\"color: blue\"} and\n[DESCRIPTION]{style=\"color: blue\"} where they are missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model parameters\nparameters <- c(\n bites = VALUE, # number of bites per mosquito per day\n NAME = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # DESCRIPTION\n infectious_period = 5, # days\n mu_M = VALUE # DESCRIPTION\n)\n```\n:::\n\n\nWe also need to specify the start time and end time for our simulation,\nas well as the time step to report values. We will use the times\nspecified in the Ndii et al. paper. Copy and paste the code chunk below\ninto your editor, and complete by specifying the arguments to the\n`seq`function, indicated as [VALUE, VALUE, VALUE]{style=\"color: blue\"}\nusing a time step of 1 day:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(VALUE, VALUE, VALUE)\n```\n:::\n\n\n### Set up the initial conditions\n\nThe Ndii et al. paper develops a model for dengue transmission in the\ncity of Cairns, Australia, which had an approximate human population of\n150,000 in 2008. The carrying capacity for the mosquito population (the\nmaximum population that can be supported without environmental\ndegradation) is related to the number of available breeding sites, which\nin turn is dependent on the number of humans. The Ndii et al paper sets\nthe carrying capacity at three times the human population, and so we\nwill assume an initial mosquito population size of 450,000, half of\nwhich is female. We only model female mosquitoes as they are the only\nones that transmit infection. Our simulations will commence with 2\ninfectious humans and 10 infectious mosquitoes, with all remaining\nhumans and mosquitoes susceptible.\n\nUsing this information, copy and paste the following code chunk into\nyour editor and complete the code by entering\n[VALUE]{style=\"color: blue\"} where it is missing, and calculating the\npopulation in the human recovered compartment and mosquito infectious\ncompartment using the values of other variables (where [EXPRESSION USING\nOTHER VARIABLES]{style=\"color: blue\"} is indicated):\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- VALUE # population of Cairns in 2008\ninitial_human_susceptible <- VALUE\ninitial_human_infectious <- 2\ninitial_human_recovered <- EXPRESSION USING OTHER VARIABLES\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- VALUE\ninitial_mosquito_infectious <- EXPRESSION USING OTHER VARIABLES\n```\n:::\n\n\n### Define the model variables (also known as compartments or states)\n\nWe define the compartments of our model, initialise the value of each\nusing the initial conditions and then gather them together in a single\nvariable. Copy and paste the code chunk below into your editor and\ncomplete the code by entering [VALUE]{style=\"color: blue\"} where it is\nmissing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define model compartments, gather into a single variable to capture the state \n# of the system and set to initial values\nstate <- c(Susceptible_human = VALUE,\n           Infectious_human = VALUE,\n           Recovered_human = VALUE,\n           Susceptible_mosquito = VALUE,\n           Infectious_mosquito = VALUE)\n```\n:::\n\n\n### Set up a function to solve the equations\n\nNow that we have defined our parameters, compartments and initial\nconditions, we will write a function to numerically solve our dengue\nmodel using the model equations developed in the previous session. Copy\nand paste the incomplete code chunk below into your editor and complete\nthe code by replacing the text indicated by [EXPRESSION USING OTHER\nVARIABLES]{style=\"color: blue\"}:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- EXPRESSION USING OTHER VARIABLES\n    Total_mosquito_population <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- EXPRESSION USING OTHER VARIABLES\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- EXPRESSION USING OTHER VARIABLES \n    Infectious_human_change <- EXPRESSION USING OTHER VARIABLES\n    Recovered_human_change <- EXPRESSION USING OTHER VARIABLES\n    Susceptible_mosquito_change <- EXPRESSION USING OTHER VARIABLES \n    Infectious_mosquito_change <- EXPRESSION USING OTHER VARIABLES\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\n### Run the model and plot the results\n\nWe now run the model, using the code you learned in a previous session.\nCopy and paste the code chunk below into your editor, enter\n[VALUE]{style=\"color: blue\"} where it is missing, and then run your\nfile:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_base <- ode(y = VALUE, times = as.numeric(times - times[1]), \n                       func = VALUE, parms = VALUE)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/run_model-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n### Comparing to published dengue incidence data\n\nThe weekly incidence of dengue infections in Cairns over the period we\nran our model is reported in Ritchie, S.A., Pyke, A.T., Hall-Mendelin,\nS.et al., 2013. An explosive epidemic of DENV-3 in Cairns, Australia.\n*PLoS One*, 8(7), p.e68137.\n\n::: row\n\n\n<center><img src=\"pone.0068137.g002.png\" alt=\"Dengue confirmed cases in Cairns Nov 2008 to May 2009\" style=\"width:80%\"/></center>\n:::\n\n\n\nThe data in this published plot represent the weekly number of newly\nconfirmed cases, while the model output we have saved reports the daily\nnumber of infectious people. To compare our data to the published data,\nwe need to convert our data into new infections, that is, convert\n*prevalence* data into *incidence* data. It is possible to save and\nreport new infections directly within your model function, but here we\nwill calculate the number of new infections using the data we have\nalready generated. From our model equations, we have:\n\n<ul>\n\n<li>Susceptible human change = - new infections</li>\n\n</ul>\n\nIf we can calculate susceptible human change from our model output, we\nwill have the number of new infections. Since our model output records\nthe number of humans in the S compartment at each of our recorded time\nsteps, if we take the difference between these entries, we will have the\nsusceptible human change, and we get the new infections by changing its\nsign. Copy and paste the code below into your editor, to convert daily\nprevalence into weekly incidence and plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\n dengue_base_infections <- dengue_base_infections  %>%\n                          mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n                                 Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/new_infections-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nComparing this plot to the published data, we can see that while we have\ncaptured the *shape* of the outbreak reasonably well, our model\ngenerates orders of magnitude higher new infections than were reported.\nThere are numerous potential explanations for this. In the next section,\nwe will adapt our model to see whether we can improve the fit.\n\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">\n\n## **Part 1:** Solutions\n\n::: {.panel-tabset}\n\n## **Part 1:** Spoiler alert\n\nThe solutions tab contains the complete code for Part 1. **Only click on it if\nyou have tried to complete the exercises yourself and need some help**\n\n## **Part 1:** Solutions for Part 1\n\nBy the end of Part 1, your script should look like this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission - human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n```\n:::\n\n:::\n\n## **Part 2:** Adapting the model\n\nIn this part, we will adapt the model we developed in Part 1 to try to\nbetter capture the Cairns dengue outbreak dynamics. It is important to\nnote that our model in Part 1 mostly used parameter values from Ndii et\nal. Two of those parameters, the probability of transmission from\nmosquito to human (T_HM) and the probability of transmission\nfrom human to mosquito (T_MH) were **fitted** using the Ndii et\nal. model, which has a different structure to the model we developed in\nPart 1.This highlights the very important point that:\n\n<center>[*Parameter values may not be directly transferable between\nmodels*]{style=\"font-size:16pt; color: red\"}</center>\n\n### What might be missing from our dengue model?\n\nWhen we wrote our vector-borne disease model, we made a simplifying\nassumption that both humans and mosquitoes are infectious immediately\nupon being infected. We noted that in reality, it takes time for the\ninfectious load to build in a host before they are capable of\ntransmitting infection. As you have seen in previous sessions, we refer\nto this as the exposed period --- an individual is infected, but not yet\ninfectious. Ndii et al. account for this in their model.\n\n**2.1 Ndii et al. use 10 days as the duration of the exposed period in\nmosquitoes. With mosquitoes living on average for 14 days, what do you\nthink are the implications of this exposed period for transmission?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"4\"></textarea>\n```\n\n<p><br></p>\n\n**2.2 Ndii et al. use 5.5 days as the duration of the exposed period in\nhumans. Which exposed period (mosquito or human) do you think would have\na greater impact on dengue disease dynamics? Why?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"4\"></textarea>\n```\n\n### Adding another compartment to our model diagram\n\nBefore we begin coding a new version of our model, it's a good idea to\ndraw the structure of the new model. Redraw the model that you produced\nin the previous session to include exposed compartments for both the\nhuman and the mosquito populations.\n\n<p>\n\n</p>\n\n<p><strong>Instructions:</strong></p>\n\n<ol style=\"list-style-type: decimal\">\n\n<li>\n\n<p>You can draw a diagram electronically in a program such as\nPowerPoint, or you can draw your diagram by hand and take a photo</p>\n\n</li>\n\n<li>\n\n<p>Make sure you label all compartments as well as the inflows and\noutflows from each compartment.</p>\n\n</li>\n\n<li>\n\n<p>Save your diagram in one of the following formats: .jpg, .gif,\n.png</p>\n\n</li>\n\n<li>\n\n<p>Upload your diagram using the <strong><em>Browse...</em></strong>\nbutton below</p>\n\n</li>\n\n<li>\n\n<p>If you prefer, you can describe your model in words in the space\nbelow</p>\n\n</li>\n\n</ol>\n\n<p><strong>NB: You can replace a file by clicking on the file name and\nselecting a file with a different name.</strong></p>\n\n::: {.field align=\"left\"}\n<span>\n\n<h3>Upload your image</h3>\n\n<p><input type=\"file\" id=\"files\" name=\"files[]\" multiple></input>\n</span></p>\n:::\n\n\n```{=html}\n<style>\n    input[type=\"file\"] {\n\n     display:block;\n    }\n    .imageThumb {\n     max-height: 600px;\n     border: 2px solid;\n     margin: 10px 10px 0 0;\n     padding: 1px;\n     }\n</style>\n```\n\n```{=html}\n<script type=\"text/javascript\">\n    $(document).ready(function() {\n\n     if(window.File && window.FileList && window.FileReader) {\n        $(\"#files\").on(\"change\",function(e) {\n            var files = e.target.files ,\n            filesLength = files.length ;\n            for (var i = 0; i < filesLength ; i++) {\n                var f = files[i]\n                var fileReader = new FileReader();\n                fileReader.onload = (function(e) {\n                    var file = e.target;\n                    $(\"<span class=\\\"pip\\\">\" +\n            \"<img class=\\\"imageThumb\\\" src=\\\"\" + e.target.result + \"\\\" title=\\\"\" + file.name + \"\\\"/>\" +\n            \"<br/><span class=\\\"remove\\\"><u>Remove image</u></span>\" +\n            \"</span>\").insertAfter(\"#files\");\n          $(\".remove\").click(function(){\n            $(this).parent(\".pip\").remove();\n          });\n                });\n               fileReader.readAsDataURL(f);\n           }\n      });\n     } else { alert(\"Your browser doesn't support to File API\") }\n    });\n\n</script>\n```\n\n### Adding another compartment to our model code\n\n**2.3 To add a new compartment to our model, several aspects need to be\nchanged. What is the additional information that needs to be provided?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"4\"></textarea>\n```\n\nBefore beginning, you should add a heading in your file indicating that\nyou have started a new model, as the code we write here will overwrite\nthe parameters and variables you used in Part 1, other than your final\nresults. For example, you could copy and paste the code chunk below into\nyour editor to start writing your code for the new model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n```\n:::\n\n\nFirst we need to add new parameters. Copy and paste the code chunk below\ninto your editor, enter [VALUE]{style=\"color: blue\"} where it is\nmissing, and then run your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model parameters\nparameters <- c(\n bites = 0.63, # number of bites per mosquito per day\n T_HM = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # probability of transmission - human to mosquito\n infectious_period = 5, # days. Duration in infectious compartment\n mu_M = 1/14, # per day. Mosquito birth and death rate.\n exposed_period_H = VALUE, # days. Duration in exposed compartment - human\n exposed_period_M = VALUE # days. Duration in exposed compartment - mosquito\n)\n```\n:::\n\n\nNext we need to add some new initial conditions. Let's start with no\nexposed humans and no exposed mosquitoes. Copy and paste the code chunk\nbelow into your editor, completing [EXPRESSION USING OTHER\nVARIABLES]{style=\"color: blue\"} where it is missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- EXPRESSION USING OTHER VARIABLES\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- EXPRESSION USING OTHER VARIABLES\n```\n:::\n\n\nAs before, we now initialise our model states, using the initial\nconditions we set above. Copy and paste the code chunk below into your\neditor, completing [EXPRESSION USING OTHER\nVARIABLES]{style=\"color: blue\"} where it is missing:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Define model compartments, gather into a single variable to capture the \n# state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = EXPRESSION USING OTHER VARIABLES,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = EXPRESSION USING OTHER VARIABLES,\n           Infectious_mosquito = initial_mosquito_infectious)\n```\n:::\n\n\nWe set up times to run the model, here extending the end date (for\nreasons that will become clear). Copy and paste the code chunk below\ninto your editor, to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n```\n:::\n\n\nNext, we adapt our model function to include the changes we have made to\nthe model structure.Copy and paste the code chunk below into your editor\nto continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + \n      Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + \n      Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / \n      Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / \n      Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - \n      Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - \n      Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - \n      (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * \n      Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * \n      Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\n**2.4 Identify the elements of the model function above that have\nchanged compared to your model in Part 1**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"6\"></textarea>\n```\n\nWe are now ready to run the model and plot the results. Note that we use\na different name for the output to preserve the results from your model\nin Part 1. Copy and paste the code chunk below into your editor, enter\n[VALUE]{style=\"color: blue\"} where it is missing, and then run the new\nmodel parts of your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_with_E <- ode(y = VALUE, times = as.numeric(times - times[1]), \n                         func = VALUE, parms = VALUE)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \n              \"Recovered humans\",   \"Susceptible mosquitoes\", \n              \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/run_model_with_E-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAs we did in Part 1, we want to convert our dengue prevalence data to\nincidence data. In our new model, we have:\n\n<ul>\n\n<li>Susceptible human change = - new infections</li>\n\n<li>Exposed human change = new infections - transitions to\ninfectious</li>\n\n<li>Infectious human change = transitions to infectious -\nrecoveries</li>\n\n<li>Recovered human change = recoveries</li>\n\n</ul>\n\nAs before, we could calculate the difference in our susceptible\npopulation from our model output to be left with 'new infections' at\neach time step. However, the new infections in this model may not yet\nhave come to the attention of the health system. We make the simplifying\nassumption that symptoms occur at the same time that a person becomes\ninfectious, and so we count the transitions into the infectious state as\nour new 'cases' and obtain these by adding the infectious human change\nand recovered human change. Copy and paste the code below into your\neditor, to convert daily prevalence into weekly incidence and plot the\nresults:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(\n  out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n                          mutate(Infectious_human_change = \n                                   c(0, diff(Infectious_human)),\n                                 Recovered_human_change = \n                                   c(0, diff(Recovered_human)),\n                                 New_human_infections = \n                                   Infectious_human_change + \n                                   Recovered_human_change,\n                                 Cumulative_human_infections = \n                                   cumsum(New_human_infections)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = \n                                   c(0, diff(Cumulative_human_infections)))\n     \n# Plot solution\nplot(dengue_with_E_infections$time, \n     dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/new_infections_with_E-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAs a reminder, here are the published data from Part 1:\n\n::: row\n\n\n<center><img src=\"pone.0068137.g002.png\" alt=\"Dengue confirmed cases in Cairns Nov 2008 to May 2009\" style=\"width:80%\"/></center>\n:::\n\n\n**2.5 How do the modelled results compare to those for the model in Part\n1? (Hint: Look at the magnitude and the timing of the peak.)**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"6\"></textarea>\n```\n\n<p><br></p>\n\n**2.6 Why do you think the modelled behaviour has changed?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"6\"></textarea>\n```\n\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">\n\n## **Part 2:** Solutions\n\n::: {.panel-tabset}\n\n## **Part 2:** Spoiler alert\n\nThe solutions tab contains the complete code for Parts 1 and 2. **Only click on \nit if you have tried to complete the exercises yourself and need some help**\n\n## **Part 2:** Solutions for Part 2\n\nBy the end of Part 2, your script should look like this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission - human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10 # days. Duration in exposed compartment - mosquito\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_infections$time, dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n```\n:::\n\n:::\n\n## **Part 3:** The impact of seasonality \n\n### Adding seasonality to the model\n\nAdding an exposed compartment reduced the number of new infections, but\nsubstantially delayed the timing of the outbreak. There is still a large\nassumption that we have made --- that the mosquito population is\nconstant. In tropical areas, mosquito numbers fluctuate substantially\nover the year, with larger numbers typically seen in the wet season,\nwhich in Cairns develops in December and lasts until March. Ndii et al.\nincorporated such seasonality in the mosquito death rate in their model.\nWe apply a seasonal death rate for mosquitoes using the parameters and\nformula applied by Ndii et al:\n\n\n$$death\\text{ }rate(t) = average\\text{ }death\\text{ }rate\\left(1 - amplitude * \\text{cos}\\left(\\frac{2\\pi*\\left(t + phase\\right)}{365}\\right)\\right)$$\n\n\nAs before, you should add a heading in your file indicating that you\nhave started a new model. For example, you could copy and paste the code\nchunk below into your editor to start writing your code for the new\nmodel:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 3##\n#############################################################\n\n# A model for dengue transmission - Part 3\n# Some R code to numerically solve a set of ordinary differential equations\n# for a model of dengue with an exposed period and seasonality. \n# Results are then plotted.\n```\n:::\n\n\nFirst we need to define the new seasonality parameters. Copy and paste\nthe code chunk below into your editor to continue writing your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Add seasonality parameters\nparameters <- c(\n bites = 0.63, # number of bites per mosquito per day\n T_HM = 0.26, # probability of transmission - mosquito to human\n T_MH = 0.26, # probability of transmission - human to mosquito\n infectious_period = 5, # days. Duration in infectious compartment\n mu_M = 1/14, # per day. Mosquito birth and death rate.\n exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n exposed_period_M = 10, # days. Duration in exposed compartment - mosquito\n death_amplitude = 0.6228, # from Ndii et al.\n death_phase = 20.61 # days, from Ndii et al.\n)\n```\n:::\n\n\n**3.1 What effect do you expect a seasonal death rate to have on the\nsize of the mosquito population?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"6\"></textarea>\n```\n\nAs well as the parameters, we also need to change our initial population\nnumbers to reflect that when our model starts in November, the mosquito\npopulation is not at its maximum value. Copy and paste the code chunk\nbelow into your editor to define the new initial conditions and\ninitialise the compartments:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 110000 # around half the maximum\ninitial_mosquito_susceptible <- 109990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n```\n:::\n\n\nWe set up times to run the model, returning to our original dates. Copy\nand paste the code chunk below into your editor, to continue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n```\n:::\n\n\nNext, we adapt our model function to add seasonality to the mosquito\ndeath rate.Copy and paste the code chunk below into your editor to\ncontinue your code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function with seasonality\ndengue_with_E_seasonal <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the current seasonal death rate\n    mu_M_seasonal <- mu_M * (1 - death_amplitude * cos(2 * pi * (t + death_phase) / 365))\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - force_of_infection_on_mosquito * Susceptible_mosquito - mu_M_seasonal * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito / exposed_period_M - mu_M_seasonal * Exposed_mosquito \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M_seasonal * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n```\n:::\n\n\nWe are now ready to run the model and plot the results. Again we use a\ndifferent name for the output to preserve the results from your model in\nParts 1 and 2. Copy and paste the code chunk below into your editor and\nthen run the new model parts of your file:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout_dengue_with_E_seasonal <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E_seasonal, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E_seasonal, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n```\n:::\n\n\nYour plot should look this this:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/run_model_with_E_seasonal-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nCopy and paste the code below into your editor, to convert daily\nprevalence into weekly incidence and plot the results:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Convert ode output to data frame\ndengue_with_E_seasonal_infections <- as.data.frame(out_dengue_with_E_seasonal[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_seasonal_infections <- dengue_with_E_seasonal_infections  %>%\n                          mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n                                 Recovered_human_change = c(0, diff(Recovered_human)),\n                                 New_human_infections = Infectious_human_change + Recovered_human_change,\n                                 Cumulative_human_infections = cumsum(New_human_infections)) %>%\n                          filter(time %% 7 == 0) %>%\n                          select(c(\"time\", \"Cumulative_human_infections\")) %>%\n                          mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n     \n# Plot solution\nplot(dengue_with_E_seasonal_infections$time, dengue_with_E_seasonal_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E and seasonality\")\n```\n\n::: {.cell-output-display}\n![](session8_vector_borne_modelling_in_r_files/figure-html/new_infections_with_E_seasonal_infectious-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAs a reminder, here are the published data from Part 1:\n\n::: row\n\n\n<center><img src=\"pone.0068137.g002.png\" alt=\"Dengue confirmed cases in Cairns Nov 2008 to May 2009\" style=\"width:80%\"/></center>\n:::\n<p><br></p>\n\n**3.2 How do the results compare to the case data in Part 1? What might\nbe the explanation for any differences?**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"6\"></textarea>\n```\n\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">\n\n## **Part 3:** Solutions\n\n::: {.panel-tabset}\n\n## **Part 3:** Spoiler alert\n\nThe solutions tab contains the complete code for Parts 1, 2 and 3. **Only click on \nit if you have tried to complete the exercises yourself and need some help**\n\n## **Part 3:** Solutions for Part 3\n\nBy the end of Part 3, your script should look like this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 1##\n#############################################################\n\n# A model for dengue transmission - Part 1\n# Some R code to numerically solve a set of ordinary differential equations\n# for a simple model of dengue. Results are then plotted.\n\n# Library imports\nrequired_packages <- (c(\"dplyr\",\n                        \"deSolve\",\n                        \"ggplot2\"))\nfor (pkg in required_packages) {\n  if (!require(pkg, character.only = TRUE)) {\n    install.packages(pkg)\n    library(pkg, character.only = TRUE)\n  }\n}\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # Probability of transmission - human to mosquito \n  infectious_period = 5, # days\n  mu_M = 1/14 # Mosquito birth and death rate\n)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious\nmosquito_population <- 225000 \ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n\n# Model function\ndengue_base <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Infectious_human_change <- force_of_infection_on_human * Susceptible_human - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito \n    Infectious_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_base <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_base, parms = parameters)\n\n# Plot solution\nplot(out_dengue_base, \n     main = c(\"Susceptible humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_base_infections <- as.data.frame(out_dengue_base[, c(\"time\", \"Susceptible_human\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_base_infections <- dengue_base_infections  %>%\n  mutate(Susceptible_human_change = -c(0, diff(Susceptible_human)),\n         Cumulative_human_infections = cumsum(Susceptible_human_change)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))    \n\n\n# Plot solution\nplot(dengue_base_infections$time, dengue_base_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 2##\n#############################################################\n\n# A model for dengue transmission - Part 2\n# Some R code to numerically solve a set of ordinary differential equations\n# for a modified model of dengue. Results are then plotted.\n\n# Model parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10 # days. Duration in exposed compartment - mosquito\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 225000 # 3 times human population, divided by 2\ninitial_mosquito_susceptible <- 224990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2011-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function\ndengue_with_E <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - (force_of_infection_on_mosquito + mu_M) * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito * (1 / exposed_period_M + mu_M) \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_infections <- as.data.frame(out_dengue_with_E[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_infections <- dengue_with_E_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_infections$time, dengue_with_E_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E\")\n\n#############################################################\n## MODELLING VECTOR-BORNE DISEASES PRACTICAL SESSION PART 3##\n#############################################################\n\n# A model for dengue transmission - Part 3\n# Some R code to numerically solve a set of ordinary differential equations\n# for a model of dengue with an exposed period and seasonality. \n# Results are then plotted.\n\n# Add seasonality parameters\nparameters <- c(\n  bites = 0.63, # number of bites per mosquito per day\n  T_HM = 0.26, # probability of transmission - mosquito to human\n  T_MH = 0.26, # probability of transmission - human to mosquito\n  infectious_period = 5, # days. Duration in infectious compartment\n  mu_M = 1/14, # per day. Mosquito birth and death rate.\n  exposed_period_H = 5.5, # days. Duration in exposed compartment - human\n  exposed_period_M = 10, # days. Duration in exposed compartment - mosquito\n  death_amplitude = 0.6228, # from Ndii et al.\n  death_phase = 20.61 # days, from Ndii et al.\n)\n\n# Initial conditions\nhuman_population <- 150000 # population of Cairns in 2008\ninitial_human_susceptible <- 149998\ninitial_human_exposed <- 0\ninitial_human_infectious <- 2\ninitial_human_recovered <- human_population - initial_human_susceptible - initial_human_infectious - initial_human_exposed\nmosquito_population <- 110000 # around half the maximum\ninitial_mosquito_susceptible <- 109990\ninitial_mosquito_exposed <- 0\ninitial_mosquito_infectious <- mosquito_population - initial_mosquito_susceptible - initial_mosquito_exposed\n\n# Define model compartments, gather into a single variable to capture the state of the system and set to initial values\nstate <- c(Susceptible_human = initial_human_susceptible,\n           Exposed_human = initial_human_exposed,\n           Infectious_human = initial_human_infectious,\n           Recovered_human = initial_human_recovered,\n           Susceptible_mosquito = initial_mosquito_susceptible,\n           Exposed_mosquito = initial_mosquito_exposed,\n           Infectious_mosquito = initial_mosquito_infectious)\n\n# Time window\nstart_date = as.Date(\"2008-11-02\")\nend_date = as.Date(\"2009-05-31\")\ntimes = seq(start_date, end_date, by = 1)\n\n# Model function with seasonality\ndengue_with_E_seasonal <- function(t, state, parameters){\n  with(as.list(c(state, parameters)), {\n    # Calculate the total population sizes\n    Total_human_population <- Susceptible_human + Infectious_human + Recovered_human + Exposed_human\n    Total_mosquito_population <- Susceptible_mosquito + Infectious_mosquito + Exposed_mosquito\n    \n    # Calculate the average force of infection imposed on each susceptible human\n    force_of_infection_on_human <- bites * T_HM * Infectious_mosquito / Total_human_population\n    \n    # Calculate the average force of infection imposed on each susceptible mosquito\n    force_of_infection_on_mosquito <- bites * T_MH * Infectious_human / Total_human_population\n    \n    # Calculate the current seasonal death rate\n    mu_M_seasonal <- mu_M * (1 - death_amplitude * cos(2 * pi * (t + death_phase) / 365))\n    \n    # Calculate the (net) instantaneous change in each compartment\n    Susceptible_human_change <- -force_of_infection_on_human * Susceptible_human\n    Exposed_human_change <- force_of_infection_on_human * Susceptible_human - Exposed_human / exposed_period_H\n    Infectious_human_change <- Exposed_human / exposed_period_H - Infectious_human / infectious_period\n    Recovered_human_change <- Infectious_human / infectious_period\n    Susceptible_mosquito_change <- mu_M * Total_mosquito_population - force_of_infection_on_mosquito * Susceptible_mosquito - mu_M_seasonal * Susceptible_mosquito\n    Exposed_mosquito_change <- force_of_infection_on_mosquito * Susceptible_mosquito - Exposed_mosquito / exposed_period_M - mu_M_seasonal * Exposed_mosquito \n    Infectious_mosquito_change <- Exposed_mosquito / exposed_period_M - mu_M_seasonal * Infectious_mosquito\n    \n    # Return net changes as list\n    return(list(\n      c(\n        Susceptible_human_change,\n        Exposed_human_change,\n        Infectious_human_change,\n        Recovered_human_change,\n        Susceptible_mosquito_change,\n        Exposed_mosquito_change,\n        Infectious_mosquito_change\n      )\n    ))\n  })\n}\n\n# Solve model\nout_dengue_with_E_seasonal <- ode(y = state, times = as.numeric(times - times[1]), func = dengue_with_E_seasonal, parms = parameters)\n\n# Plot solution\nplot(out_dengue_with_E_seasonal, \n     main = c(\"Susceptible humans\", \"Exposed humans\", \"Infectious humans\", \"Recovered humans\",\n              \"Susceptible mosquitoes\", \"Exposed mosquitoes\", \"Infectious mosquitoes\"), \n     xlab = \"Time\", ylab = c(\"population size\"))\n\n# Convert ode output to data frame\ndengue_with_E_seasonal_infections <- as.data.frame(out_dengue_with_E_seasonal[, c(\"time\", \"Infectious_human\", \"Recovered_human\")])\n\n# Create columns for new infections and cumulative new infections, \n# Select every 7th row and calculate the difference\ndengue_with_E_seasonal_infections <- dengue_with_E_seasonal_infections  %>%\n  mutate(Infectious_human_change = c(0, diff(Infectious_human)),\n         Recovered_human_change = c(0, diff(Recovered_human)),\n         New_human_infections = Infectious_human_change + Recovered_human_change,\n         Cumulative_human_infections = cumsum(New_human_infections)) %>%\n  filter(time %% 7 == 0) %>%\n  select(c(\"time\", \"Cumulative_human_infections\")) %>%\n  mutate(Weekly_human_infections = c(0, diff(Cumulative_human_infections)))\n\n# Plot solution\nplot(dengue_with_E_seasonal_infections$time, dengue_with_E_seasonal_infections$Weekly_human_infections, \n     xlab = \"Time\", ylab = c(\"number of infections\"),\n     main = \"Weekly human new infections, model with E and seasonality\")\n```\n:::\n\n:::\n\n## **Part 4:** Interventions\n\n### Interventions to control dengue\n\nInterventions against vector-borne diseases can take a number of\ndifferent forms, because they can target the host (humans in the dengue\nmodel we have considered here) or the vector (mosquitoes in our dengue\nmodel). Interventions can also act at different stages of the vector\nlife-cycle, for example, spraying to kill mosquito eggs before they\nhatch.\n\nIn groups of 4--6, identify interventions that could be implemented to\ncontrol dengue transmission and for each of them, consider what action\nthat intervention would have (for example, does it reduce human\nsusceptibility to infection?). Then discuss how the model we have\ndeveloped would need to be adapted to include the intervention.\n\nFor those wanting an extension activity, adapt the model developed in Part 3 to \ninclude these interventions, one at a time, and plot the results.\n\n**4.1 Intervention 1: note the type of intervention, how it acts and how\nour model could be adapted to include it.**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"8\"></textarea>\n```\n\n<p><br></p>\n\n**4.2 Intervention 2: note the type of intervention, how it acts and how\nour model could be adapted to include it.**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"8\"></textarea>\n```\n\n<p><br></p>\n\n**4.3 Intervention 3: note the type of intervention, how it acts and how\nour model could be adapted to include it.**\n\n\n```{=html}\n<textarea cols=\"127\" rows=\"8\"></textarea>\n```\n\n<p><br></p>\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">\n\n",
    "supporting": [
      "session8_vector_borne_modelling_in_r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}