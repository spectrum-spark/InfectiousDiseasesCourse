{
  "hash": "1298adba890dfdf88a09f215a3535fd6",
  "result": {
    "markdown": "---\ntitle: \"Fitting models in R\"\nauthor:\n    - Thanks to <a href=\"http://www.tropmedres.ac/researchers/researcher/lisa-white\">Lisa White</a>, and <a href=\"https://www.ndm.ox.ac.uk/team/ben-cooper\">Ben Cooper</a>, Nuffield Department of Medicine, Oxford University and\n    - <a href=\"https://research.jcu.edu.au/portfolio/michael.meehan1/\">Michael Meehan</a>, Australian Institute of Tropical Health & Medicine, James Cook University.\n    - Adapted and presented by <a href=\"https://research.jcu.edu.au/portfolio/emma.mcbryde\">Emma McBryde</a>, Australian Institute of Tropical Health & Medicine, James Cook University\n    - July 2022\noutput:\n    html_document:\n        self_contained: yes\nautocomplete: false\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n<style type=\"text/css\">\ntextarea {\n    width: 100%;\n}\n\n.line-block {\n    line-height: 1.5em;\n}\n\n.line-block a {\n    font-style: italic;\n}\n</style>\n:::\n\n\n# Summary\n\nA practical session where the students use a worked example to learn how a compartmental SEIRS model is written in the R programming language. Meaningful model output will be derived and plotted. We will use a COVID-19 outbreak in Thailand as an example.\n\nWe will write some R code for our COVID-19 model. The code for a compartmental model will require several sections:\n\n**Part 1** covers:\n\n-   Code summary\n-   Set working directory\n-   Keep track of dependencies\n-   Set the start and end time for the model simulation\n-   Examine the dataset\n\n**Part 2** covers:\n\n-   Define the model parameters\n-   Set up the initial conditions\n-   Define the model variables (also known as the compartments or states)\n-   Set up a function to solve the equations\n-   Run and plot the model\n\n**Part 3** covers:\n\n-   Post-process the model output to predict standard epidemiological metrics\n-   Plot useful outputs\n\n*We recommend to save your text at the end of each part by printing the file.*\n\n# Prerequisites and Data in R\n\n## Code summary\n\nIt is good practice to write a short description of your code to summarise its purpose for future users. Below is an example of such a description. Open R studio, create a new file and copy and paste the code chunk below into your editor to start writing your own code:\n\n```         \n# SPARK Modelling Short course\n# 2023 Infectious Diseases Modelling\n\n#########################################\n## Modelling Thailand's COVID outbreak ##\n#########################################\n```\n\nSave this file in your `student_materials` folder, and give it a meaningful name, like `session_seir_ode_covid`.\n\n## Library loading and importing data\n\nWe'll need three libraries for this session:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(deSolve)\nlibrary(ggplot2)\n```\n:::\n\n\nand some data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfirst_wave <- read.csv(\"first_wave_TH.csv\", colClasses = c(\"Date\", \"numeric\", \"numeric\"))\n# Convert dates\nfirst_wave$Date <- as.Date(first_wave$Date, format = \"%Y-%m-%d\")\n\nsummary(first_wave)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Date                Cases        Cumulative_cases\n Min.   :2020-01-01   Min.   :  0.00   Min.   :   0    \n 1st Qu.:2020-02-15   1st Qu.:  0.00   1st Qu.:  34    \n Median :2020-03-31   Median :  2.00   Median :1711    \n Mean   :2020-03-31   Mean   : 17.42   Mean   :1535    \n 3rd Qu.:2020-05-15   3rd Qu.: 11.00   3rd Qu.:3025    \n Max.   :2020-06-30   Max.   :188.00   Max.   :3171    \n```\n:::\n:::\n\n\n# Writing model code in R\n\n## Define the model parameters\n\nAll our parameters have to go in a single structure, either a vector or a list. Today, we'll use a named vector\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nparameters <- c(\n    R0 = 4,\n    latent_period = 5,\n    infectious_period = 6\n)\n```\n:::\n\n\nThe parameters for the model are frequently estimated either from literature or from the data given the model and other parameters of the model (stay tuned for more on this). The flows are often represented by some Greek symbols, but it is often better to have more meaningful names as we have done here.\n\nComplete the following table using information about the natural history of COVID-19 infection:\n\n|                 Parameter |                 Flow transformation                 |                     Value/Range                     |                        Units                        |\n|--------------------:|:---------------:|:---------------:|:---------------:|\n| Basic reproduction number | <input type=\"text\" id=\"name\" name=\"name\" size=\"15\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> |\n|         Latent period | <input type=\"text\" id=\"name\" name=\"name\" size=\"15\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> |\n|     Duration of infection | <input type=\"text\" id=\"name\" name=\"name\" size=\"15\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> |\n|      Duration of immunity | <input type=\"text\" id=\"name\" name=\"name\" size=\"15\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> | <input type=\"text\" id=\"name\" name=\"name\" size=\"10\"> |\n\nType `parameters` in your console. What do you see?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nType \\`parameters\\[\"R0\"\\] into your console. What does this value mean?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\n## Set up the initial conditions and model variables\n\nCopy and paste the chunk below into your script to continue model development:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Initial conditions\nTotal_population <- 6.6e7\nInitial_exposed <- 0\nInitial_infected <- 20\nInitial_recovered <- 0\nInitial_susceptible <- Total_population - Initial_exposed - Initial_infected - Initial_recovered\n\n# State variables\nstate <- c(\n    Susceptible = Initial_susceptible,\n    Exposed = Initial_exposed,\n    Infectious = Initial_infected,\n    Recovered = Initial_recovered\n)\n```\n:::\n\n\nWe also need to define the start and end time for the model simulation:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Time window\nstart_date <- as.Date(\"2020-03-07\")\nend_date <- as.Date(\"2020-03-26\")\ntimes <- seq(start_date, end_date, by = 1)\n```\n:::\n\n\n## Setting up the function to solve equations\n\nJust as we did for session 2, we can write *functions* to evaluate our system of equations, which we will need to use for the ODE solver. The SEIR model we're going to use here is more complicated than we've seen, but work through it slowly and make sure it all makes sense.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Model function\nCOVID.base <- function(t, state, parameters) {\n    with(as.list(c(state, parameters)), {\n        # Calculate the total population size\n        Total_population <- Susceptible + Exposed + Infectious + Recovered\n\n        # Calculate the average force of infection imposed on each susceptible individual\n        force_of_infection <- R0 * Infectious / (Total_population * infectious_period)\n\n        # Calculate the net (instantaneous) change in each state variable\n        Susceptible_change <- -force_of_infection * Susceptible\n        Exposed_change <- force_of_infection * Susceptible - Exposed / latent_period\n        Infectious_change <- Exposed / latent_period - Infectious / infectious_period\n        Recovered_change <- Infectious / infectious_period\n\n        # Return net changes as list\n        return(list(\n            c(\n                Susceptible_change,\n                Exposed_change,\n                Infectious_change,\n                Recovered_change\n            )\n        ))\n    })\n}\n```\n:::\n\n\nWhat is the name of our function and what are the inputs and outputs?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nWhat is the rate of movement out of state `E`?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nWhat is the rate of movement out of state `I`?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nWhat is the formula for $\\lambda$, known as the *force of infection*?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nExplain the different components of the force of infection.\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"5\"></textarea>\n```\n\n## Run and plot the model\n\nCopy the following chunk into your script to solve the ODE\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Solve model\nout <- ode(y = state, times = as.numeric(times - times[1]), func = COVID.base, parms = parameters)\n# Plot solution\npar(mar = c(1, 1, 1, 1)) # reduce the margins of the plot in order to fit it in the panel\nplot(out)\n```\n\n::: {.cell-output-display}\n![](session4_covid_thailand_seir_model_files/figure-html/solve-ode-initial-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nExplain how each of the variables `S`, `E`, `I` and `R` can be measured in the field.\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nDefine incidence and prevalence, and discuss the differences between them.\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\n# Data processing and plotting\n\n## Post-process the model output to predict standard epidemiological metrics\n\nThis is great, but as we've seen before, the output from `ode` can be a bit unwieldy. Let's write a function that can clean it up for us.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntidy_base_model <- function(ode_output, times, parameters) {\n    as.data.frame(ode_output) %>%\n        mutate(\n            Prevalence = Exposed + Infectious,\n            Incidence = Exposed / parameters[\"latent_period\"],\n            Cumulative_incidence = cumsum(Incidence),\n            Population = Susceptible + Exposed + Infectious + Recovered,\n            Date = times\n        )\n}\n\ntidied_output <- tidy_base_model(out, times, parameters)\n```\n:::\n\n\nWhat is the formula for incidence?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nWrite down an equation for prevalence and the corresponding R code.\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nWhy do we choose to plot incidence?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\n## Plot the total population size and predicted incidence\n\nIt's time to plot our solution, and make sure we haven't made any silly mistakes.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot() +\n    geom_line(aes(x = Date, y = Prevalence), data = tidied_output, linewidth = 1, colour = \"firebrick\") +\n    labs(x=\"Date\", y=\"Modelled Prevalence\") +\n    ggtitle(\"Thailand's First Wave, Jan-Jul 2020\") +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](session4_covid_thailand_seir_model_files/figure-html/compare-histogram-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nggplot() +\n    geom_line(aes(x = Date, y = Population), data = tidied_output, linewidth = 1, colour = \"firebrick\") +\n    ggtitle(\"Thailand's First Wave, Jan-Jul 2020\") +\n    labs(x=\"Date\", y=\"Total Population\") +\n    ggtitle(\"Thailand's First Wave, Jan-Jul 2020\") +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](session4_covid_thailand_seir_model_files/figure-html/compare-histogram-2.png){fig-align='center' width=672}\n:::\n:::\n\n\nWhat is the sum of all the differential equations for the COVID-19 model?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nWhy do we choose to plot the population size over time?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\n## Compare the model with the data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Compare the solution with the data\n# Incidence\nggplot(first_wave) +\n  geom_col(aes(x=Date, y=Cases), width=1, fill=NA, colour=\"black\") +\n  geom_point(data=tidied_output, aes(x=Date, y=Incidence), size=2, colour=\"firebrick\") +\n  ylab(\"Daily cases\") +\n  xlab(\"\") +\n  ggtitle(\"Model-predicted incidence\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](session4_covid_thailand_seir_model_files/figure-html/compare-data-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n# Cumulative incidence\nggplot(first_wave) +\n  geom_line(aes(x=Date, y=Cumulative_cases), linewidth=2, colour=\"skyblue\") +\n  geom_point(data=tidied_output, aes(x=Date, y=Cumulative_incidence), size=2, colour=\"firebrick\") +\n  ylab(\"Cumulative cases\") +\n  xlab(\"\") +\n  ggtitle(\"Model-predicted cumulative incidence\") +\n  theme_bw()\t\t\n```\n\n::: {.cell-output-display}\n![](session4_covid_thailand_seir_model_files/figure-html/compare-data-2.png){fig-align='center' width=672}\n:::\n:::\n\n\nVary the value of $R_0$ and re-run the model. What value of $R_0$ do you think is most realistic?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"1\"></textarea>\n```\n\nPerhaps the number of people who seeded the outbreak was smaller or larger. How can you explore that using the code and would that change your estimate for $R_0$?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nWhat is the difference between the first and second graphs, and why should we plot these?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\nTry changing the end times and re-running the model:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstart_date = as.Date(\"2020-03-07\")\nend_date = as.Date(\"2020-04-26\")\ntimes_long = seq(start_date, end_date, by=1)\n\nlong_out <- ode(y = state, times = as.numeric(times_long - times_long[1]), func = COVID.base, parms = parameters)\ntidied_long <- tidy_base_model(long_out, times_long, parameters)\n```\n:::\n\n\nWhy would we do this?\n\n\n```{=html}\n<textarea name=\"Text1\" cols=\"127\" rows=\"3\"></textarea>\n```\n\n<input type=\"button\" value=\"Print this page\" onclick=\"window.print()\">",
    "supporting": [
      "session4_covid_thailand_seir_model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}